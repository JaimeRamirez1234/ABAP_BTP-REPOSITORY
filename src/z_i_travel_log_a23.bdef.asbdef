managed; //
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for Z_I_TRAVEL_LOG_A23 alias Travel
implementation in class zbp_i_travel_a23 unique
persistent table ztravel_log_a223
with additional save
lock master
authorization master ( instance )
etag master LastChangeAt
{
  //Administrative Fields: Read Only
  field ( readonly ) LastChangeAt, LastChangedBy, CreatedAt, CreatedBy;
  //Mandatory fields that are required to create a travel
  field ( mandatory ) TravelId, AgencyId, OverallStatus, BookingFee, CurrencyCode;
  //Dynamic field control
  field ( features : instance ) TravelId, OverallStatus;

  create;
  update;
  delete;

  //Validacciones
  validation validateCustomer on save { create; field CustomerId; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateStatus on save { create; field OverallStatus; }

  //Actions
  action (features : instance) acceptTravel result[1] $self;

  action (features : instance) rejectTravel result[1] $self;

  action createTravelByTemplate result[1] $self;

  association _Booking { create (features : instance); }

  //Mapeo
  //Si los nombres entre el CDS y la tabla coinciden se puede usar de la siguiente manera
  //mapping for ztravel_log_a223 corresponding
  //De lo contrario seria se√±alando cada uno de los campos
  mapping for ztravel_log_a223 {
    TravelId = travel_id;
    AgencyId = agency_id;
    CustomerId = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    BookingFee = booking_fee;
    TotalPrice = total_price;
    CurrencyCode = currency_code;
    Description = description;
    OverallStatus = overall_status;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangeAt = last_change_at;
  }


}

//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------

define behavior for Z_I_BOOKING_LOG_A223 alias Booking
implementation in class zbp_i_booking_a23 unique
persistent table zbooking_log_a23
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangeAt
{

  //Static fields Control
  field ( readonly ) TravelId;

  field ( mandatory : create ) BookingId, CarrierId, ConnectionId, FlightDate, BookingStatus;

  update;
  delete;

  //Validation
  validation validateStatus on save { create; field BookingStatus; }

  //Determinations
  determination calculateTotalFlightPrice on modify{ field FlightPrice, CurrencyCode; }

  association _BoookingSupplement { create (features : instance); }

  association _Travel { }

  mapping for zbooking_log_a23 {
        TravelId = travel_id;
        BookingId = booking_id;
        BookingDate = booking_date;
        CustomerId = customer_id;
        CarrierId = carrier_id;
        ConnectionId = connection_id;
        FlightDate = flight_date;
        FlightPrice = flight_price;
        CurrencyCode = currency_code;
        BookingStatus = booking_status;
        LastChangeAt = last_change_at;
  }
}

//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------

define behavior for Z_I_BOOKSUPPL_LOG_A223 alias Supplement
implementation in class zbp_i_booksuppl_a23 unique
with unmanaged save
//persistent table <???>
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangeAt
{
  field ( readonly ) TravelId, BookingId;
  field ( mandatory : create) SupplementId, Price;
  update;
  delete;

  //Determinations
  determination calculateTotalSupplPrice on modify{ field Price, Currency; }

  association _Travel;
  association _Booking;


mapping for zlog_log_a223 corresponding;

}